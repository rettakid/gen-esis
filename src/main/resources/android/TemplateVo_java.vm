package za.cpackage ${classPackage};

import android.databinding.BaseObservable;
import android.databinding.Bindable;
import za.co.rettakid.carwash.BR;
import android.util.Log;
import java.text.ParseException;
import java.text.SimpleDateFormat;
#foreach(${import} in ${imports})
${import}
#end

public class ${classObject.name.parcelCaseName}Vo extends BaseObservable   {

#foreach(${variable} in ${classObject.variables})
#if (${variable.type.variableTypeEnum} == 'REF')
    #set($type = ${variable.type.javaName} + 'Vo')
#else
    #set($type = ${variable.type.javaName})
#end
    private ${type} ${variable.name.camelCaseName};
#end

#foreach(${variable} in ${classObject.variables})
#if (${variable.type.variableTypeEnum} == 'REF')
    #set($type = ${variable.type.javaName} + 'Vo')
#else
    #set($type = 'String')
#end
    @Bindable
    public ${type} get${variable.name.parcelCaseName}()   {
#if (${variable.type.variableTypeEnum} == 'INT' || ${variable.type.variableTypeEnum} == 'BIGINT' || ${variable.type.variableTypeEnum} == 'BOOLEAN' || ${variable.type.variableTypeEnum} == 'FLOAT')
        return String.valueOf(this.${variable.name.camelCaseName});
#elseif (${variable.type.variableTypeEnum} == 'DATE' || ${variable.type.variableTypeEnum} == 'DATETIME')
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat();
        return simpleDateFormat.format(this.${variable.name.camelCaseName});
#elseif (${variable.type.variableTypeEnum} == 'REF')
        return this.${variable.name.camelCaseName};
#else
        return String.valueOf(this.${variable.name.camelCaseName});
#end
    }

    public void set${variable.name.parcelCaseName}(${type} ${variable.name.camelCaseName})   {
#if (${variable.type.variableTypeEnum} == 'INT')
        this.${variable.name.camelCaseName} = Integer.parseInt(${variable.name.camelCaseName});
#elseif (${variable.type.variableTypeEnum} == 'BIGINT')
        this.${variable.name.camelCaseName} = Long.parseLong(${variable.name.camelCaseName});
#elseif (${variable.type.variableTypeEnum} == 'BOOLEAN')
        this.${variable.name.camelCaseName} = Boolean.parseBoolean(${variable.name.camelCaseName});
#elseif (${variable.type.variableTypeEnum} == 'FLOAT')
        this.${variable.name.camelCaseName} = Float.parseFloat(${variable.name.camelCaseName});
#elseif (${variable.type.variableTypeEnum} == 'DATE' || ${variable.type.variableTypeEnum} == 'DATETIME')
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat();
        try {
            this.${variable.name.camelCaseName} = simpleDateFormat.parse(${variable.name.camelCaseName});
        } catch (ParseException e) {
            Log.e("${classObject.name.parcelCaseName}Vo","Date Parse Error");
        }
#else
        this.${variable.name.camelCaseName} = ${variable.name.camelCaseName};
#end
        notifyPropertyChanged(BR.${variable.name.camelCaseName});
    }
#end

/* real getters and setters */

#foreach(${variable} in ${classObject.variables})
#if (${variable.type.variableTypeEnum} == 'REF')
    #set($type = ${variable.type.javaName} + 'Vo')
#else
    #set($type = ${variable.type.javaName})
#end
    public ${type} getReal${variable.name.parcelCaseName}()   {
        return this.${variable.name.camelCaseName};
    }

    public void setReal${variable.name.parcelCaseName}(${type} ${variable.name.camelCaseName})   {
        this.${variable.name.camelCaseName} = ${variable.name.camelCaseName};
    }
#end

}