package ${classPackage};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
#foreach(${import} in ${imports})
${import}
#end

@Service
@Transactional
public class ${classObject.name.parcelCaseName}ServiceImpl implements ${classObject.name.parcelCaseName}Service   {

    @Autowired
    private ${classObject.name.parcelCaseName}Dao ${classObject.name.camelCaseName}Dao;

    @Override
    public ${classObject.name.parcelCaseName}ListDto get${classObject.name.parcelCaseName}s()  {
        ${classObject.name.parcelCaseName}ListDto ${classObject.name.camelCaseName}ListDto = new ${classObject.name.parcelCaseName}ListDto();
        ${classObject.name.camelCaseName}ListDto.add${classObject.name.parcelCaseName}List(Bind${classObject.name.parcelCaseName}.bind${classObject.name.parcelCaseName}EntityList(${classObject.name.camelCaseName}Dao.read()));
        return ${classObject.name.camelCaseName}ListDto;
    }

    @Override
    public ${classObject.name.parcelCaseName}Dto get${classObject.name.parcelCaseName}s(${classObject.primaryKeyVar.type.javaName} ${classObject.primaryKeyVar.name.camelCaseName})  {
        return Bind${classObject.name.parcelCaseName}.bind${classObject.name.parcelCaseName}(${classObject.name.camelCaseName}Dao.read(${classObject.primaryKeyVar.name.camelCaseName}));
    }
    
    @Override
    public ${classObject.name.parcelCaseName}Dto post${classObject.name.parcelCaseName}s(${classObject.name.parcelCaseName}Dto ${classObject.name.camelCaseName}Dto)  {
        ${classObject.name.parcelCaseName}Entity ${classObject.name.camelCaseName}Entity = Bind${classObject.name.parcelCaseName}.bind${classObject.name.parcelCaseName}(${classObject.name.camelCaseName}Dto);
        ${classObject.name.camelCaseName}Dao.createOrUpdate(${classObject.name.camelCaseName}Entity);
        return Bind${classObject.name.parcelCaseName}.bind${classObject.name.parcelCaseName}(${classObject.name.camelCaseName}Entity);
    }

    @Override
    public void put${classObject.name.parcelCaseName}s(${classObject.name.parcelCaseName}Dto ${classObject.name.camelCaseName}Dto)  {
        ${classObject.name.camelCaseName}Dao.createOrUpdate(Bind${classObject.name.parcelCaseName}.bind${classObject.name.parcelCaseName}(${classObject.name.camelCaseName}Dto));
    }

    @Override
    public void delete${classObject.name.parcelCaseName}s(${classObject.primaryKeyVar.type.javaName} ${classObject.primaryKeyVar.name.camelCaseName})  {
        ${classObject.name.camelCaseName}Dao.delete(${classObject.name.camelCaseName}Dao.read(${classObject.primaryKeyVar.name.camelCaseName}));
    }

}